name: Rust

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main", "dev"]

concurrency:
  # Documentation suggests ${{ github.head_ref }}, but that's only available on pull_request/pull_request_target triggers, so using ${{ github.ref }}.
  # On main, we want all builds to complete even if merging happens faster to make it easier to discover at which point something broke.
  group: ${{ github.ref == 'refs/heads/main' && format('ci-main-{0}', github.sha) || format('ci-{0}', github.ref) }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  OPENSSL_NO_VENDOR: "0"
  OPENSSL_STATIC: "1"

jobs:
  lints:
    name: Lints
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy -- -D warnings
      - name: Setup cargo-hack
        run: cargo install cargo-hack
      - name: Check all features
        run: >
          cargo hack check --feature-powerset --no-dev-deps
          --mutually-exclusive-features default,native-tls,websocket-native-tls,rustls,websocket-rustls

  get_version:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.package_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from Cargo.toml
        id: package_version
        run: |
          version=$(grep '^version' Cargo.toml | head -n1 | sed 's/version = "\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: [get_version]
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            exe: rathole
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04
            exe: rathole
            target: aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Install cross
        run: cargo install cross
      - name: Build with cross for ${{ matrix.target }}
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: cross build --target ${{ matrix.target }} --release
      - name: Build for ${{ matrix.target }}
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: cargo build --target ${{ matrix.target }} --release
      - uses: actions/upload-artifact@v4
        with:
          name: rathole-${{ needs.get_version.outputs.version }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.exe }}
  release:
    name: Release
    runs-on: ubuntu-24.04
    needs: [build, get_version]
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.get_version.outputs.version }}
          name: v${{ needs.get_version.outputs.version }}
          files: artifacts/**/*
          draft: false
          prerelease: false